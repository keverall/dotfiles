# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Suppress output during instant prompt initialization
typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet
typeset -g POWERLEVEL9K_INSTANT_PROMPT_COMMAND_LINES=1

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

#  Use to change theme for eza - ln -sf "$(pwd)/eza-themes/themes/dracula.yml" ~/.config/eza/theme.yml 

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
# ZSH_THEME="powerlevel10k/powerlevel10k"
# ZSH_THEME="agnoster"
ZSH_THEME="powerlevel10k/powerlevel10k"
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(history)
POWERLEVEL9K_SHORTEN_DIR_LENGTH=1

# Add virtual environment to the left prompt
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon dir virtualenv pyenv vcs newline prompt_char)

# Virtual environment configuration
POWERLEVEL9K_VIRTUALENV_SHOW_PYTHON_VERSION=true
POWERLEVEL9K_VIRTUALENV_FOREGROUND=black
POWERLEVEL9K_VIRTUALENV_BACKGROUND=green

# Pyenv configuration (for Python version display)
POWERLEVEL9K_PYENV_SHOW_PYTHON_VERSION=true
POWERLEVEL9K_PYENV_FOREGROUND=white
POWERLEVEL9K_PYENV_BACKGROUND=blue

# Ensure virtual environment detection works
POWERLEVEL9K_VIRTUALENV_GENERIC_NAMES=(virtualenv venv .venv)
POWERLEVEL9K_VIRTUALENV_LEFT_DELIMITER=""
POWERLEVEL9K_VIRTUALENV_RIGHT_DELIMITER=""

export LS_COLORS="rs=0:no=00:mi=00:mh=00:ln=01;36:or=01;31:di=01;34:ow=04;01;34:st=34:tw=04;34:pi=01;33:so=01;33:do=01;33:bd=01;33:cd=01;33:su=01;35:sg=01;35:ca=01;35:ex=01;32:"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
export NVM_LAZY=1

# Oh My Zsh update optimization
zstyle ':omz:update' mode auto      # Auto-update without prompting
zstyle ':omz:update' frequency 7    # Check weekly instead of daily

# Load plugins - simplified without instant prompt conditionals
plugins=(
         git
         git-extras
         gitfast
         extract
         history-substring-search
         terraform
         z
         zsh-syntax-highlighting
         zsh-autosuggestions
         ohmyzsh-full-autoupdate
         common-aliases
         aws
         
         # Python Development
         python
         pip
         virtualenv
         
         # DevOps & Infrastructure
         docker
         docker-compose
         kubectl
         helm
         
         # Development Workflow
         jsontools
         web-search
         colored-man-pages
         command-not-found
         
         # Enhanced Navigation & Productivity
         copypath
         copyfile
         dirhistory
)

# Source Oh My Zsh normally
source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias history="history -E"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# Note: If ~/.p10k.zsh exists, it may override the above POWERLEVEL9K settings
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
#
if [ -x "$(command -v eza)" ]; then
    alias ls="eza --icons=auto"
    alias la="eza -lag --icons=auto"   
    alias laa="eza -aalg --icons=auto"   
    alias lt1="eza -l@TL1 --icons=auto "  
    alias lt2="eza -l@TL2 --icons=auto "    
    alias lt3="eza -l@TL3 --icons=auto "
fi

alias gk="gitkraken"

# Fastfetch alias - run manually when desired
alias ff='fastfetch --logo-type sixel --logo ~/Downloads/Ubuntu-nice.jpg --logo-width 30'

# VS Code function for WSL - runs completely silently in background
code() {
    (nohup "/mnt/c/Users/kever/AppData/Local/Programs/Microsoft VS Code/code.exe" "$@" > /dev/null 2>&1 &)
}

# Additional directory navigation aliases
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias -- -="cd -"

# Enhanced git aliases (supplements the git plugin)
alias gaa="git add --all"
alias gcm="git commit -m"
alias gcam="git commit -a -m"
alias gco="git checkout"
alias gcb="git checkout -b"
alias gst="git status"
alias glog="git log --oneline --decorate --graph"
alias gp="git push"
alias gpl="git pull"
alias gf="git fetch"
alias gr="git remote -v"
alias gd="git diff"
alias gdc="git diff --cached"

# AWS CLI shortcuts (supplements the aws plugin)
alias awsp="aws sts get-caller-identity"
alias awsl="aws s3 ls"
alias awsec2="aws ec2 describe-instances"
alias awslogs="aws logs describe-log-groups"

# Enhanced jq aliases for JSON processing
alias jqp='jq .'                           # Pretty print JSON
alias jqk='jq keys'                        # Get all keys
alias jqv='jq values'                      # Get all values  
alias jql='jq length'                      # Get length/count
alias jqt='jq type'                        # Get type of JSON
alias jqs='jq -S .'                        # Sort keys and pretty print
alias jqr='jq -r'                          # Raw output (no quotes)
alias jqc='jq -c .'                        # Compact JSON (single line)
alias jqm='jq -M .'                        # Monochrome output
alias jqf='jq -f'                          # Read filter from file
alias jqcsv='jq -r "(map(keys) | add | unique) as \$cols | map(. as \$row | \$cols | map(\$row[.])) as \$rows | \$cols, \$rows[] | @csv"'  # Convert JSON to CSV

# source "$HOME/.cargo/env"

# ===== PATH CONFIGURATION =====
# Build PATH efficiently in one comprehensive export
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$HOME/.local/bin:/snap/bin"

# Version managers (conditional for pyenv, combined for others)
export PYENV_ROOT="$HOME/.pyenv"
[[ -d "$PYENV_ROOT/bin" ]] && export PATH="$PYENV_ROOT/bin:$PATH"
export PATH="$HOME/.goenv/bin:$HOME/.tfenv/bin:$PATH"

# Language-specific paths
export DENO_INSTALL="/home/kev/.deno"
export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export PATH="$DENO_INSTALL/bin:$GOPATH/bin:$GOROOT/bin:$PATH"

# VS Code PATH
export PATH="$PATH:/mnt/c/Users/kever/AppData/Local/Programs/Microsoft VS Code/bin"

# Initialize version managers (lazy loading for speed)
# eval "$(pyenv init - zsh)"
# eval "$(goenv init -)"

# Lazy load pyenv
pyenv() {
  unfunction pyenv
  eval "$(command pyenv init - zsh)"
  pyenv "$@"
}

# Lazy load goenv
goenv() {
  unfunction goenv
  eval "$(command goenv init -)"
  goenv "$@"
}
# ===== END PATH CONFIGURATION =====

# Load bash completion and other completions
autoload -U +X bashcompinit && bashcompinit
# Only set terraform completion if terraform exists (suppress any output)
if command -v terraform >/dev/null 2>&1; then
  complete -o nospace -C /usr/bin/terraform terraform 2>/dev/null
fi

#  export PATH="$PATH:$(yarn global bin)"
# Run fastfetch once per session (moved after p10k instant prompt)
# This is now handled at the end of the file to avoid instant prompt warnings
# Optimized neofetch (cached and faster)
# if command -v neofetch >/dev/null 2>&1; then
#     # Cache neofetch output for faster subsequent loads
#     NEOFETCH_CACHE="$HOME/.cache/neofetch_output"
    
#     # Only regenerate cache if it's older than 1 hour or doesn't exist
#     if [[ ! -f "$NEOFETCH_CACHE" ]] || [[ $(find "$NEOFETCH_CACHE" -mmin +60 2>/dev/null) ]]; then
#         mkdir -p "$(dirname "$NEOFETCH_CACHE")"
#         neofetch --stdout > "$NEOFETCH_CACHE" 2>/dev/null &!
#     fi
    
#     # Show cached output with lolcat (much faster)
#     if [[ -f "$NEOFETCH_CACHE" ]] && command -v lolcat >/dev/null 2>&1; then
#         cat "$NEOFETCH_CACHE" | lolcat -t
#     elif [[ -f "$NEOFETCH_CACHE" ]]; then
#         cat "$NEOFETCH_CACHE"
#     fi
# fi

# export NVM_DIR="$HOME/.nvm"
#   [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#   [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Add custom completion path if directory exists
if [[ -d ~/.zsh/completion ]]; then
  fpath=($fpath ~/.zsh/completion)
fi

# VS Code terminal auto-navigation to repos directory
if [[ "$TERM_PROGRAM" == "vscode" ]] && [[ "$PWD" == "$HOME" ]]; then
  # Only change directory if we're starting from home and repos directory exists
  if [[ -d "$HOME/repos" ]]; then
    cd "$HOME/repos" >/dev/null 2>&1
  fi
fi

# Ubuntu Splash Screen on startup
# Only run if fastfetch is available and we're in an interactive shell
# Use delayed execution to avoid interfering with Powerlevel10k instant prompt
if command -v fastfetch >/dev/null 2>&1 && [[ $- == *i* ]]; then
  # Schedule Ubuntu splash to run after zsh initialization completes
  {
    # Wait for instant prompt to finish
    sleep 0.2
    
    # Clear screen for clean Ubuntu splash
    clear
    
    # Display Ubuntu splash screen with system info
    echo ""
    echo "🟠 Welcome to Ubuntu on WSL2! 🟠"
    echo ""
    
    # Run fastfetch with Ubuntu logo and clean layout
    fastfetch --logo ubuntu-studio \
              --logo-width 25 \
              --logo-padding-top 1 \
              --separator "  " \
              --color-keys cyan \
              --color-title magenta
    
    echo ""
    echo "💻 Happy coding! Use 'ff' for custom fastfetch or 'fastfetch' anytime."
    echo ""
  } &!
fi

# Chezmoi aliases
alias cz='chezmoi'
alias cza='chezmoi add'
alias czap='chezmoi apply'
alias czcd='chezmoi cd'
alias czd='chezmoi diff'
alias cze='chezmoi edit'
alias czs='chezmoi status'
alias czu='chezmoi update'
alias czr='chezmoi re-add'
alias czm='chezmoi merge'
alias czpu='chezmoi git push'
alias czpl='chezmoi git pull'
alias czst='chezmoi git status'
alias czco='chezmoi git commit'
alias czga='chezmoi git add .'
alias czgca='chezmoi git add . && chezmoi git commit'
